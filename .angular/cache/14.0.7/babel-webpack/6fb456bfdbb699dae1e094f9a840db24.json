{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/api.service\";\nimport * as i4 from \"./../../toast.service\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nexport let SubcategoryModalComponent = /*#__PURE__*/(() => {\n  class SubcategoryModalComponent {\n    constructor(data, ref, builder, apiService, toastService) {\n      this.data = data;\n      this.ref = ref;\n      this.builder = builder;\n      this.apiService = apiService;\n      this.toastService = toastService;\n      this.errorMessage = '';\n      this.myForm = this.builder.group({\n        subCatgName: this.builder.control('', Validators.required),\n        categoryId: this.builder.control('', Validators.required),\n        metaTags: this.builder.control('', Validators.required),\n        metapropertyurl: this.builder.control('', Validators.required),\n        metapropertytype: this.builder.control('', Validators.required),\n        metapropertytitle: this.builder.control('', Validators.required),\n        metapropertydescription: this.builder.control('', Validators.required)\n      });\n    }\n\n    ngOnInit() {\n      this.inputdata = this.data;\n\n      if (this.inputdata.id > 0) {\n        this.setEditData(this.inputdata.id);\n      }\n    }\n\n    closepopup() {\n      this.ref.close();\n    }\n\n    setEditData(id) {\n      this.apiService.getSubCategoryById(id).subscribe(item => {\n        this.editData = item;\n        this.myForm.setValue({\n          subCatgName: this.editData.subCatgName,\n          categoryId: this.editData.categoryId,\n          metaTags: this.editData.metaTags,\n          metapropertyurl: this.editData.metapropertyurl,\n          metapropertytype: this.editData.metapropertytype,\n          metapropertytitle: this.editData.metapropertytitle,\n          metapropertydescription: this.editData.metapropertydescription\n        });\n      });\n    }\n\n    onFormSubmit() {\n      if (this.myForm.valid) {\n        if (this.inputdata.id > 0) {\n          this.updateSubCatData();\n        } else {\n          this.saveSubCat();\n        }\n      } else {\n        this.toastService.showError('Please fill out the brand name.');\n      }\n    }\n\n    updateSubCatData() {\n      const updatedData = Object.assign({\n        catgEntryId: this.editData.catgEntryId\n      }, this.myForm.value);\n      this.apiService.updateSubCategoryById(updatedData).subscribe(response => {\n        // Handle the response as needed\n        this.toastService.showSuccess('SubCategory Updated successfully!');\n        this.closepopup();\n      }, error => {\n        console.error('Error creating post:', error);\n        this.toastService.showError(error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n    saveSubCat() {\n      this.apiService.createSubCategory(this.myForm.value).subscribe(res => {\n        this.toastService.showSuccess('SubCategory Added successfully!');\n        this.closepopup();\n      }, error => {\n        console.error('Error creating post:', error);\n        this.toastService.showError(error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n  }\n\n  SubcategoryModalComponent.ɵfac = function SubcategoryModalComponent_Factory(t) {\n    return new (t || SubcategoryModalComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.ToastService));\n  };\n\n  SubcategoryModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubcategoryModalComponent,\n    selectors: [[\"app-subcategory-modal\"]],\n    decls: 46,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"matNativeControl\", \"\", \"formControlName\", \"categoryId\"], [\"value\", \"\", \"selected\", \"\"], [\"value\", \"volvo\"], [\"value\", \"saab\"], [\"value\", \"mercedes\"], [\"value\", \"audi\"], [\"formControlName\", \"subCatgName\", \"matInput\", \"\"], [\"formControlName\", \"metaTags\", \"matInput\", \"\"], [\"formControlName\", \"metapropertyurl\", \"matInput\", \"\"], [\"formControlName\", \"metapropertytype\", \"matInput\", \"\"], [\"formControlName\", \"metapropertytitle\", \"matInput\", \"\"], [\"formControlName\", \"metapropertydescription\", \"matInput\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"]],\n    template: function SubcategoryModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SubcategoryModalComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-form-field\")(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Category List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 3);\n        i0.ɵɵelement(8, \"option\", 4);\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Volvo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Saab\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"Mercedes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 8);\n        i0.ɵɵtext(16, \"Audi\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"mat-form-field\")(18, \"mat-label\");\n        i0.ɵɵtext(19, \" Category Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"mat-label\");\n        i0.ɵɵtext(23, \" Meta Tags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\")(26, \"mat-label\");\n        i0.ɵɵtext(27, \" Meta Property Url\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\")(30, \"mat-label\");\n        i0.ɵɵtext(31, \" Meta Property Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-form-field\")(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Meta Property Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-form-field\")(38, \"mat-label\");\n        i0.ɵɵtext(39, \"Meta Property Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 15)(42, \"button\", 16);\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"button\", 17);\n        i0.ɵɵtext(45, \"Close\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.inputdata.title);\n        i0.ɵɵadvance(41);\n        i0.ɵɵtextInterpolate(ctx.inputdata.id ? \"Update\" : \"Save\");\n      }\n    },\n    dependencies: [i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i5.MatButton, i6.MatFormField, i6.MatLabel, i7.MatInput, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".mat-form-field[_ngcontent-%COMP%]{width:98%;margin:1%}\"]\n  });\n  return SubcategoryModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}