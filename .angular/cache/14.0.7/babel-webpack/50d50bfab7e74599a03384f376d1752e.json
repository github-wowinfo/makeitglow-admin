{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/paginator\";\nimport * as i6 from \"@angular/material/sort\";\n\nfunction CountriesTableComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Country Name\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountriesTableComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r9.countryName);\n  }\n}\n\nfunction CountriesTableComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Phone Code\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountriesTableComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r10.phoneCode);\n  }\n}\n\nfunction CountriesTableComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \"Action\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountriesTableComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12)(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-icon\", 13);\n    i0.ɵɵtext(4, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountriesTableComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\n\nfunction CountriesTableComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 20];\n};\n\nexport let CountriesTableComponent = /*#__PURE__*/(() => {\n  class CountriesTableComponent {\n    constructor(apiService, dialog) {\n      this.apiService = apiService;\n      this.dialog = dialog;\n      this.dataSource = new MatTableDataSource();\n      this.countryData = [];\n      /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n\n      this.displayedColumns = ['name', 'phoneCode', 'action']; // this.dataSource = new CountriesTableDataSource();\n\n      this.loadCountry();\n    }\n\n    loadCountry() {\n      this.apiService.getCountry().subscribe(response => {\n        this.countryData = response;\n        this.dataSource = new MatTableDataSource(this.countryData);\n      }, error => {\n        console.error('Error creating post:', error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.table.dataSource = this.dataSource;\n    }\n\n  }\n\n  CountriesTableComponent.ɵfac = function CountriesTableComponent_Factory(t) {\n    return new (t || CountriesTableComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n\n  CountriesTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountriesTableComponent,\n    selectors: [[\"app-countries-table\"]],\n    viewQuery: function CountriesTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatTable, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 8,\n    consts: [[1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"matSort\", \"\", \"aria-label\", \"Elements\", 1, \"full-width-table\", 3, \"dataSource\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"phoneCode\"], [\"matColumnDef\", \"action\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-label\", \"Select page\", 3, \"length\", \"pageIndex\", \"pageSize\", \"pageSizeOptions\"], [\"paginator\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [2, \"cursor\", \"pointer\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function CountriesTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n        i0.ɵɵelementContainerStart(2, 2);\n        i0.ɵɵtemplate(3, CountriesTableComponent_th_3_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(4, CountriesTableComponent_td_4_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(5, 5);\n        i0.ɵɵtemplate(6, CountriesTableComponent_th_6_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(7, CountriesTableComponent_td_7_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(8, 6);\n        i0.ɵɵtemplate(9, CountriesTableComponent_th_9_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(10, CountriesTableComponent_td_10_Template, 5, 0, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(11, CountriesTableComponent_tr_11_Template, 1, 0, \"tr\", 7);\n        i0.ɵɵtemplate(12, CountriesTableComponent_tr_12_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"mat-paginator\", 9, 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.dataSource == null ? null : ctx.dataSource.data == null ? null : ctx.dataSource.data.length)(\"pageIndex\", 0)(\"pageSize\", 10)(\"pageSizeOptions\", i0.ɵɵpureFunction0(7, _c0));\n      }\n    },\n    dependencies: [i3.MatIcon, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow, i5.MatPaginator, i6.MatSort, i6.MatSortHeader],\n    styles: [\".full-width-table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return CountriesTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}