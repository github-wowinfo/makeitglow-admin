{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n    } // Customer\n    // Sub Category Api\n\n\n    getCustomers() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Auth/GetAllCustomerUsers`, {\n        headers\n      });\n    }\n\n    getQueries() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Ecom/GetAllContactUs`, {\n        headers\n      });\n    }\n\n    getSubscription() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Ecom/GetAllSubscribers`, {\n        headers\n      });\n    }\n\n    getNewOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/1`, {\n        headers\n      });\n    }\n\n    getprocessOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/2`, {\n        headers\n      });\n    }\n\n    getConfirmedOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/3`, {\n        headers\n      });\n    }\n\n    getshippedOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/4`, {\n        headers\n      });\n    }\n\n    getdeliveredOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/5`, {\n        headers\n      });\n    }\n\n    getcancelledOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/6`, {\n        headers\n      });\n    }\n\n    getrefundedOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/7`, {\n        headers\n      });\n    }\n\n    getdeletedOrders() {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Admin/Actions/AllOrdersByStatus/0`, {\n        headers\n      });\n    }\n\n    updateorderStatus(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Admin/Actions/UpdateOrderStatus`, postData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    updatepaymentStatus(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Admin/Actions/UpdateOrderPaymentStatus`, postData, {\n        headers,\n        responseType: 'text'\n      });\n    } // Brand Api\n\n\n    getPosts() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllBrands`);\n    }\n\n    createBrand(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddBrand`, postData, {\n        headers\n      });\n    }\n\n    updateBrandById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateBrand`, postData, {\n        headers\n      });\n    }\n\n    deleteBrand(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteBrand/` + id, {}, {\n        headers\n      });\n    }\n\n    getBrandById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetBrand/` + id);\n    } // Countries Api\n\n\n    getCountry() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllCountries`);\n    }\n\n    deleteCountry(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteCountry/` + id, {}, {\n        headers\n      });\n    }\n\n    createCountry(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddCountry`, postData, {\n        headers\n      });\n    }\n\n    updateCountryById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateCountry`, postData, {\n        headers\n      });\n    }\n\n    getCountryById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetCountry/` + id);\n    } // City Api\n\n\n    getCity() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllCities`);\n    }\n\n    deleteCity(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteCity/` + id, {}, {\n        headers\n      });\n    }\n\n    createCity(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddCity`, postData, {\n        headers\n      });\n    }\n\n    updateCityById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateCity`, postData, {\n        headers\n      });\n    }\n\n    getCityById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetCity/` + id);\n    } // Location Api\n\n\n    getLocation() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllLocations`);\n    }\n\n    deleteLocation(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteLocation/` + id, {}, {\n        headers\n      });\n    }\n\n    createLocation(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddLocation`, postData, {\n        headers\n      });\n    }\n\n    updateLocationById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateLocation`, postData, {\n        headers\n      });\n    }\n\n    getLocationById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetLocation/` + id);\n    } // Reference Api\n\n\n    getReference() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllReferences`);\n    }\n\n    deleteReference(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteReference/` + id, {}, {\n        headers\n      });\n    }\n\n    createReference(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddReference`, postData, {\n        headers\n      });\n    }\n\n    updateReferenceById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateReference`, postData, {\n        headers\n      });\n    }\n\n    getReferenceById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetReference/` + id);\n    } // Tax Api\n\n\n    getTax() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllTaxRates`);\n    }\n\n    deleteTax(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteTaxRate/` + id, {}, {\n        headers\n      });\n    }\n\n    createTax(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddTaxRate`, postData, {\n        headers\n      });\n    }\n\n    updateTaxById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateTaxRate`, postData, {\n        headers\n      });\n    }\n\n    getTaxById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetTaxRate/` + id);\n    } // Category Api\n\n\n    getCategory() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllCategories`);\n    }\n\n    deleteCategory(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteCategory/` + id, {}, {\n        headers\n      });\n    }\n\n    createCategory(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddCategory`, postData, {\n        headers\n      });\n    }\n\n    updateCategoryById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateCategory`, postData, {\n        headers\n      });\n    }\n\n    getCategoryById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetCategory/` + id);\n    } // Sub Category Api\n\n\n    getsubCategory() {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetAllSubCategories`);\n    }\n\n    deleteSubCategory(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/DeleteSubCategory/` + id, {}, {\n        headers\n      });\n    }\n\n    createSubCategory(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/AddSubCategory`, postData, {\n        headers\n      });\n    }\n\n    updateSubCategoryById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Masters/UpdateSubCategory`, postData, {\n        headers\n      });\n    }\n\n    getSubCategoryById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Masters/GetSubCategory/` + id);\n    } // Blog Category Api\n\n\n    getblogCategory() {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetAllBlogCategories`);\n    }\n\n    deleteblogCategory(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/DeleteBlogCategory?id=${id}`, {}, {\n        headers\n      });\n    }\n\n    createblogCategory(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/AddBlogCategory`, postData, {\n        headers\n      });\n    }\n\n    updateblogCategoryById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/UpdateBlogCategory`, postData, {\n        headers\n      });\n    }\n\n    getblogCategoryById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetBlogCategory/` + id);\n    } // Blog Tag Api\n\n\n    getblogTag() {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetAllBlogTags`);\n    }\n\n    deleteblogTag(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/DeleteBlogTags/` + id, {}, {\n        headers\n      });\n    }\n\n    createblogTag(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/AddBlogTags`, postData, {\n        headers\n      });\n    }\n\n    updateblogTagById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/UpdateBlogTags`, postData, {\n        headers\n      });\n    }\n\n    getblogTagById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetBlogTags/` + id);\n    } // Blog  Api\n\n\n    getblog() {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetAllBlogs`);\n    }\n\n    deleteblog(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/DeleteBlog/` + id, {}, {\n        headers\n      });\n    }\n\n    createblog(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/AddBlog`, postData, {\n        headers\n      });\n    }\n\n    updateblogById(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Blogs/UpdateBlog`, postData, {\n        headers\n      });\n    }\n\n    getblogById(id) {\n      return this.http.get(`${environment.apiUrl}/api/Blogs/GetBlogById/` + id);\n    } // Login Api\n\n\n    createPost(postData) {\n      return this.http.post(`${environment.apiUrl}/api/Auth/Login`, postData);\n    } // Product APIs\n\n\n    getProducts() {\n      return this.http.get(`${environment.apiUrl}/api/Items/GetAllItems`);\n    }\n\n    EnableDisableHasVariant(id, variant) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Items/EnableDisableHasVariant?id=${id}&hasVariant=${variant}`, {}, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    deleteProduct(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Items/DeleteItem?id=${id}`, {}, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    deleteProductVariant(id) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Items/DeleteVariantItem?id=${id}`, {}, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    getProductById(id) {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Items/GetItemById?id=${id}`);\n    }\n\n    getorderById(id) {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Order/GetOrderDetailsByOrderId?OrderId=${id}`, {\n        headers\n      });\n    }\n\n    addProduct(formData) {\n      const headers = this.createHeaders1();\n      return this.http.post(`${environment.apiUrl}/api/Items/AddNonVariantItem`, formData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    updateProduct(formData) {\n      const headers = this.createHeaders1();\n      return this.http.post(`${environment.apiUrl}/api/Items/UpdateItem`, formData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    addProductVariant(formData) {\n      const headers = this.createHeaders1();\n      return this.http.post(`${environment.apiUrl}/api/Items/AddVariantItem`, formData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    updateVariant(formData) {\n      const headers = this.createHeaders1();\n      return this.http.post(`${environment.apiUrl}/api/Items/UpdateVariantItem`, formData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    addVariantStock(postData) {\n      const headers = this.createHeaders();\n      return this.http.post(`${environment.apiUrl}/api/Items/AddItemVariantStock`, postData, {\n        headers,\n        responseType: 'text'\n      });\n    }\n\n    getVariantProductById(id) {\n      const headers = this.createHeaders();\n      return this.http.get(`${environment.apiUrl}/api/Items/GetVariantItemById?id=${id}`);\n    }\n\n    createHeaders() {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token'); // Set the token in the headers\n\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      });\n      return headers;\n    }\n\n    createHeaders1() {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token'); // Set the token in the headers\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return headers;\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}