{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nlet BrandModalComponent = class BrandModalComponent {\n  constructor(data, ref, builder, apiService) {\n    this.data = data;\n    this.ref = ref;\n    this.builder = builder;\n    this.apiService = apiService;\n    this.myForm = this.builder.group({\n      brndName: this.builder.control('')\n    });\n  }\n\n  ngOnInit() {\n    this.inputdata = this.data;\n\n    if (this.inputdata.id > 0) {\n      this.setEditData(this.inputdata.id);\n    }\n  }\n\n  closepopup() {\n    this.ref.close();\n  }\n\n  setEditData(id) {\n    this.apiService.getBrandById(id).subscribe(item => {\n      this.editData = item;\n      this.myForm.setValue({\n        brndName: this.editData.brndName\n      });\n    });\n  }\n\n  onFormSubmit() {\n    if (this.inputdata.id > 0) {\n      this.updateBrandData();\n    } else {\n      this.SaveBrand();\n    }\n  }\n\n  updateBrandData() {\n    // Assuming 'myForm' is an instance of FormGroup\n    const updatedData = Object.assign({\n      id: this.editData.id\n    }, this.myForm.value);\n    this.apiService.updateBrandById(updatedData).subscribe(response => {\n      // Handle the response as needed\n      console.log('Update successful', response);\n    });\n  }\n\n  SaveBrand() {\n    console.log(this.myForm.value);\n    this.apiService.createBrand(this.myForm.value).subscribe(res => {\n      this.closepopup();\n    });\n  }\n\n};\nBrandModalComponent = __decorate([Component({\n  selector: 'app-brand-modal',\n  templateUrl: './brand-modal.component.html',\n  styleUrls: ['./brand-modal.component.scss']\n}), __param(0, Inject(MAT_DIALOG_DATA))], BrandModalComponent);\nexport { BrandModalComponent };","map":null,"metadata":{},"sourceType":"module"}