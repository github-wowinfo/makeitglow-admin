{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./../../toast.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/card\";\n\nfunction AddProductVariantComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"img\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.selectedMainImage, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AddProductVariantComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"img\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.selectedMainImage2, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AddProductVariantComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"img\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.selectedMainImage3, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AddProductVariantComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"img\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.selectedMainImage3, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let AddProductVariantComponent = /*#__PURE__*/(() => {\n  class AddProductVariantComponent {\n    constructor(apiService, builder, toastService, router, route) {\n      this.apiService = apiService;\n      this.builder = builder;\n      this.toastService = toastService;\n      this.router = router;\n      this.route = route;\n      this.errorMessage = '';\n      this.isUpdate = false; // Track if it's in update mode\n\n      this.variantIdToUpdate = '';\n      this.selectedMainImage = '';\n      this.selectedMainImage2 = '';\n      this.selectedMainImage3 = '';\n      this.selectedMainImage4 = '';\n      this.myForm = this.builder.group({\n        ItemId: this.builder.control('', Validators.required),\n        Srno: this.builder.control(''),\n        BarCodeNo: this.builder.control('', Validators.required),\n        ItemTitle: this.builder.control('', Validators.required),\n        HowToUse: this.builder.control('', Validators.required),\n        UnitVolume: this.builder.control('', Validators.required),\n        ThumbnailFile: [''],\n        MainImage1File: [''],\n        Image2File: [''],\n        Image3File: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        var _a;\n\n        this.id = params.get('id'); // console.log(this.id);\n\n        (_a = this.myForm.get('ItemId')) === null || _a === void 0 ? void 0 : _a.setValue(this.id);\n        const productId = +params.get('variantId'); // Convert to number\n\n        if (productId && productId > 0) {\n          this.variantIdToUpdate = productId.toString(); // Convert back to string if needed\n\n          this.isUpdate = true;\n          this.populateFormForUpdate();\n        } // Retrieve the 'id' parameter from the URL\n        // this.id = params.get('id');\n        // console.log(this.id);\n        // this.myForm.get('ItemId')?.setValue(this.id);\n        // this.variantIdToUpdate = params.get('variantId') || '';\n        // if (this.variantIdToUpdate) {\n        //   // Populate form for update\n        //   this.isUpdate = true;\n        //   this.populateFormForUpdate();\n        // }\n\n      });\n    }\n\n    onFileChange(event) {\n      var _a;\n\n      console.log('events', event);\n\n      if (event.target.files.length > 0) {\n        this.file1 = event.target.files[0];\n        console.log('events', this.file1);\n        (_a = this.myForm.get('ThumbnailFile')) === null || _a === void 0 ? void 0 : _a.setValue(this.file1);\n      }\n    }\n\n    onMain1FileChange(event) {\n      var _a;\n\n      console.log('events', event);\n\n      if (event.target.files.length > 0) {\n        this.file2 = event.target.files[0];\n        console.log('events', this.file2);\n        (_a = this.myForm.get('MainImage1File')) === null || _a === void 0 ? void 0 : _a.setValue(this.file2); // const file = event.target.files[0];\n        // this.myForm.get('MainImage1File')?.setValue(file); // Set to file object\n      }\n    }\n\n    onMain2FileChange(event) {\n      var _a;\n\n      console.log('events', event);\n\n      if (event.target.files.length > 0) {\n        this.file3 = event.target.files[0];\n        console.log('events', this.file3);\n        (_a = this.myForm.get('Image2File')) === null || _a === void 0 ? void 0 : _a.setValue(this.file3); // const file = event.target.files[0];\n        // this.myForm.get('Image3File')?.setValue(file); // Set to file object\n      }\n    }\n\n    onMain3FileChange(event) {\n      var _a;\n\n      console.log('events', event);\n\n      if (event.target.files.length > 0) {\n        this.file4 = event.target.files[0];\n        console.log('events', this.file4);\n        (_a = this.myForm.get('Image3File')) === null || _a === void 0 ? void 0 : _a.setValue(this.file4); // const file = event.target.files[0];\n        // this.myForm.get('Image2File')?.setValue(file); // Set to file object\n      }\n    }\n\n    populateFormForUpdate() {\n      // Use the productIdToUpdate to fetch the existing product data and populate the form\n      // Example:\n      this.apiService.getVariantProductById(this.variantIdToUpdate).subscribe(data => {\n        console.log('data', data); // const mfgDate = new Date(data.mfgDate);\n        // const day = mfgDate.getDate().toString().padStart(2, '0'); // Add zero padding for single-digit days\n        // const month = (mfgDate.getMonth() + 1).toString().padStart(2, '0'); // Add zero padding for single-digit months\n        // const year = mfgDate.getFullYear();\n        // const formattedMfgDate = `${day}/${month}/${year}`;\n\n        this.selectedMainImage = data.thumbnail ? data.thumbnail : '';\n        this.selectedMainImage2 = data.mainImage1 ? data.mainImage1 : '';\n        this.selectedMainImage3 = data.image2 ? data.image2 : '';\n        this.selectedMainImage4 = data.image3 ? data.image3 : '';\n        this.myForm.patchValue({\n          Srno: data.srno || '',\n          BarCodeNo: data.barCodeNo || '',\n          ItemTitle: data.itemTitle || '',\n          HowToUse: data.howToUse || '',\n          UnitVolume: data.unitVolume || '',\n          ThumbnailFile: data.thumbnail ? data.thumbnail : '',\n          MainImage1File: data.mainImage1 ? data.mainImage1 : '',\n          Image2File: data.image2 ? data.image2 : '',\n          Image3File: data.image3 ? data.image3 : ''\n        });\n        console.log('this.myForm.patchValue', this.myForm.patchValue);\n      }, error => {\n        console.error('Error fetching product data for update:', error);\n      });\n    }\n\n    onFormSubmit() {\n      if (this.myForm.valid) {\n        if (this.isUpdate) {\n          this.updateProduct();\n        } else {\n          if (this.file1 === undefined && this.file2 === undefined && this.file3 === undefined && this.file4 === undefined) {\n            this.toastService.showError('Please Add All The Images');\n            return;\n          }\n\n          this.saveProduct();\n        }\n      } else {\n        this.toastService.showError('Please fill out the Required Fields.');\n      }\n    }\n\n    updateProduct() {\n      const formData = new FormData();\n      Object.keys(this.myForm.value).forEach(key => {\n        formData.append(key, this.myForm.value[key]);\n      }); // Add the product ID to update\n\n      formData.append('VrntEntryId', this.variantIdToUpdate);\n      console.log('formData', formData, this.myForm.value);\n      this.apiService.updateVariant(formData).subscribe(res => {\n        this.toastService.showSuccess('Variant Updated successfully!');\n        this.router.navigate(['/products/productList']); // location.reload()\n        // Optionally, navigate to a different route or do something else after update\n      }, error => {\n        console.error('Error updating product:', error);\n        this.toastService.showError(error);\n      });\n    }\n\n    saveProduct() {\n      const formData = new FormData(); // Append each field of myForm to FormData\n\n      Object.keys(this.myForm.value).forEach(key => {\n        formData.append(key, this.myForm.value[key]);\n      });\n      console.log('formData', formData, this.myForm.value);\n      this.apiService.addProductVariant(formData).subscribe(res => {\n        this.toastService.showSuccess('Product Variant Added successfully!'); // location.reload()\n\n        this.router.navigate(['/products/productList']);\n      }, error => {\n        console.error('Error creating post:', error);\n        this.toastService.showError(error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n  }\n\n  AddProductVariantComponent.ɵfac = function AddProductVariantComponent_Factory(t) {\n    return new (t || AddProductVariantComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  AddProductVariantComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddProductVariantComponent,\n    selectors: [[\"app-add-product-variant\"]],\n    decls: 49,\n    vars: 5,\n    consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"justify-content-between\", \"p-3\", \"mt-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"page__content\", \"shadow\", \"p-3\", \"position-relative\"], [1, \"InputStyle\"], [\"matInput\", \"\", \"formControlName\", \"ItemTitle\"], [\"matInput\", \"\", \"formControlName\", \"Srno\"], [\"matInput\", \"\", \"formControlName\", \"BarCodeNo\"], [\"matInput\", \"\", \"formControlName\", \"HowToUse\"], [\"matInput\", \"\", \"formControlName\", \"UnitVolume\"], [1, \"mb-3\"], [\"type\", \"file\", \"formControlName\", \"ThumbnailFile\", 1, \"d-block\", 3, \"change\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [\"type\", \"file\", \"formControlName\", \"MainImage1File\", 1, \"d-block\", 3, \"change\"], [\"type\", \"file\", \"formControlName\", \"Image2File\", 1, \"d-block\", 3, \"change\"], [\"type\", \"file\", \"formControlName\", \"Image3File\", 1, \"d-block\", 3, \"change\"], [\"mat-dialog-actions\", \"\", 1, \"mt-3\", \"text-center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"me-3\"], [1, \"page__content-data\", \"position-absolute\", \"text-center\"], [1, \"mt-2\"], [\"width\", \"150px\", \"alt\", \"Thumbnail Image\", 3, \"src\"], [\"width\", \"150px\", \"alt\", \"MainImage\", 3, \"src\"], [\"width\", \"150px\", \"alt\", \"MainImage2\", 3, \"src\"], [\"width\", \"150px\", \"alt\", \"MainImage3\", 3, \"src\"]],\n    template: function AddProductVariantComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Add Product Variant \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddProductVariantComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Item Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 4)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"SKUI ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 4)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"BarCode No (EAN)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 4)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"How To Use\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 4)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Unit Volume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-card\", 10)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Thumbnail Images *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 11);\n        i0.ɵɵlistener(\"change\", function AddProductVariantComponent_Template_input_change_28_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(29, AddProductVariantComponent_div_29_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-card\", 10)(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Product Image 1 *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 13);\n        i0.ɵɵlistener(\"change\", function AddProductVariantComponent_Template_input_change_33_listener($event) {\n          return ctx.onMain1FileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, AddProductVariantComponent_div_34_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-card\", 10)(36, \"mat-label\");\n        i0.ɵɵtext(37, \"Product Image 2 *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 14);\n        i0.ɵɵlistener(\"change\", function AddProductVariantComponent_Template_input_change_38_listener($event) {\n          return ctx.onMain2FileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(39, AddProductVariantComponent_div_39_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-card\", 10)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"Product Image 3 *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"input\", 15);\n        i0.ɵɵlistener(\"change\", function AddProductVariantComponent_Template_input_change_43_listener($event) {\n          return ctx.onMain3FileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, AddProductVariantComponent_div_44_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 16)(46, \"button\", 17);\n        i0.ɵɵtext(47, \"Save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(48, \"div\", 18);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedMainImage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedMainImage2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedMainImage3);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedMainImage3);\n      }\n    },\n    dependencies: [i5.NgIf, i6.MatDialogActions, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i10.MatCard],\n    styles: [\".InputStyle[_ngcontent-%COMP%]{width:50%;padding:10px}\"]\n  });\n  return AddProductVariantComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}