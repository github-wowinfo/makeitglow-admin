{"ast":null,"code":"import { BlogCatModalComponent } from './../blog-cat-modal/blog-cat-modal.component';\nimport { DeleteConfirmationComponent } from './../../delete-confirmation/delete-confirmation.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"./../../toast.service\";\nexport let BlogCatTableComponent = /*#__PURE__*/(() => {\n  class BlogCatTableComponent {\n    constructor(apiService, dialog, toastService) {\n      this.apiService = apiService;\n      this.dialog = dialog;\n      this.toastService = toastService;\n      this.blogCat = [];\n      this.dataSource = new MatTableDataSource();\n      /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n\n      this.displayedColumns = ['name', 'Action']; // this.dataSource = new BrandTableDataSource();\n\n      this.loadCat();\n    }\n\n    loadCat() {\n      this.apiService.getblogCategory().subscribe(response => {\n        this.blogCat = response;\n        this.dataSource = new MatTableDataSource(this.blogCat);\n        this.dataSource.paginator = this.paginator;\n      }, error => {\n        console.error('Error creating post:', error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n    editCat(id) {\n      this.Openpopup(id, 'Edit Blog Category');\n    }\n\n    addCat() {\n      this.Openpopup(0, 'Add Blog Category');\n    }\n\n    deleteCat(id) {\n      const dialogRef = this.dialog.open(DeleteConfirmationComponent);\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          // User confirmed deletion\n          this.apiService.deleteblogCategory(id).subscribe(response => {\n            this.toastService.showSuccess('Blog Category Deleted successfully!');\n            this.loadCat();\n            console.log('Delete successful', response);\n          });\n        }\n      });\n    }\n\n    Openpopup(id, title) {\n      var _popup = this.dialog.open(BlogCatModalComponent, {\n        width: '40%',\n        data: {\n          title: title,\n          id: id\n        }\n      });\n\n      _popup.afterClosed().subscribe(item => {\n        this.loadCat();\n      });\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n      this.table.dataSource = this.dataSource;\n    }\n\n  }\n\n  BlogCatTableComponent.ɵfac = function BlogCatTableComponent_Factory(t) {\n    return new (t || BlogCatTableComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.ToastService));\n  };\n\n  BlogCatTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlogCatTableComponent,\n    selectors: [[\"app-blog-cat-table\"]],\n    viewQuery: function BlogCatTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatTable, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function BlogCatTableComponent_Template(rf, ctx) {},\n    styles: [\".full-width-table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return BlogCatTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}