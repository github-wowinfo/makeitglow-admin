{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { BlogCatTableDataSource } from './blog-cat-table-datasource';\nimport * as i0 from \"@angular/core\";\nexport let BlogCatTableComponent = /*#__PURE__*/(() => {\n  class BlogCatTableComponent {\n    constructor() {\n      /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n      this.displayedColumns = ['id', 'name'];\n      this.dataSource = new BlogCatTableDataSource();\n    }\n\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.table.dataSource = this.dataSource;\n    }\n\n  }\n\n  BlogCatTableComponent.ɵfac = function BlogCatTableComponent_Factory(t) {\n    return new (t || BlogCatTableComponent)();\n  };\n\n  BlogCatTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlogCatTableComponent,\n    selectors: [[\"app-blog-cat-table\"]],\n    viewQuery: function BlogCatTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatTable, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function BlogCatTableComponent_Template(rf, ctx) {},\n    styles: [\".full-width-table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return BlogCatTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}