{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./../../toast.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nexport let AddInventoryComponent = /*#__PURE__*/(() => {\n  class AddInventoryComponent {\n    constructor(apiService, builder, toastService, router, route) {\n      this.apiService = apiService;\n      this.builder = builder;\n      this.toastService = toastService;\n      this.router = router;\n      this.route = route;\n      this.errorMessage = '';\n      this.myForm = this.builder.group({\n        //     <!-- \"purchasePrice\": 55,\n        // \"purchaseQty\": 100,\n        // \"itmVrntId\": 45,\n        // \"mrp\": 70,\n        // \"sellingPrice\": 55,\n        // \"shippingCharges\": 0,\n        // \"availableQty\": 100 -->\n        purchasePrice: this.builder.control('', Validators.required),\n        purchaseQty: this.builder.control('', Validators.required),\n        availableQty: this.builder.control('', Validators.required),\n        mrp: this.builder.control('', Validators.required),\n        sellingPrice: this.builder.control('', Validators.required),\n        itmVrntId: this.builder.control('', Validators.required)\n      });\n    }\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        var _a; // Retrieve the 'id' parameter from the URL\n\n\n        this.id = params.get('id');\n        console.log(this.id);\n        (_a = this.myForm.get('itmVrntId')) === null || _a === void 0 ? void 0 : _a.setValue(this.id);\n      });\n    }\n\n    onFormSubmit() {\n      if (this.myForm.valid) {\n        this.saveProduct();\n      } else {\n        this.toastService.showError('Please fill out the Required Fields.');\n      }\n    }\n\n    saveProduct() {\n      const formData = new FormData(); // Append each field of myForm to FormData\n\n      Object.keys(this.myForm.value).forEach(key => {\n        formData.append(key, this.myForm.value[key]);\n      });\n      console.log('formData', formData, this.myForm.value);\n      this.apiService.addProductVariant(formData).subscribe(res => {\n        this.toastService.showSuccess('Product Variant Added successfully!');\n        location.reload();\n      }, error => {\n        console.error('Error creating post:', error);\n        this.toastService.showError(error); // Optionally, you can handle errors, show a message, etc.\n      });\n    }\n\n  }\n\n  AddInventoryComponent.ɵfac = function AddInventoryComponent_Factory(t) {\n    return new (t || AddInventoryComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  AddInventoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddInventoryComponent,\n    selectors: [[\"app-add-inventory\"]],\n    decls: 31,\n    vars: 1,\n    consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"justify-content-between\", \"p-3\", \"mt-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"page__content\", \"shadow\", \"p-3\", \"position-relative\"], [1, \"InputStyle\"], [\"matInput\", \"\", \"formControlName\", \"purchasePrice\"], [\"matInput\", \"\", \"formControlName\", \"purchaseQty\"], [\"matInput\", \"\", \"formControlName\", \"availableQty\"], [\"matInput\", \"\", \"formControlName\", \"mrp\"], [\"matInput\", \"\", \"formControlName\", \"sellingPrice\"], [\"mat-dialog-actions\", \"\", 1, \"mt-3\", \"text-center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"me-3\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"], [1, \"page__content-data\", \"position-absolute\", \"text-center\"]],\n    template: function AddInventoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Add Product Variant \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddInventoryComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Purchase Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 4)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Purchase Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 4)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Available Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 4)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"MRP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 4)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Selling Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 10)(26, \"button\", 11);\n        i0.ɵɵtext(27, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 12);\n        i0.ɵɵtext(29, \"Close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(30, \"div\", 13);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    dependencies: [i5.MatDialogClose, i5.MatDialogActions, i6.MatButton, i7.MatFormField, i7.MatLabel, i8.MatInput, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return AddInventoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}