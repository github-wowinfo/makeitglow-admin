{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/api.service\";\nimport * as i4 from \"./../../toast.service\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nexport let OrderStatusModalComponent = /*#__PURE__*/(() => {\n  class OrderStatusModalComponent {\n    constructor(dialogRef, data, fb, apiService, toastService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.fb = fb;\n      this.apiService = apiService;\n      this.toastService = toastService;\n      this.orderStatusForm = this.fb.group({\n        remark: ['', Validators.required]\n      });\n    }\n\n    updateOrderStatus() {\n      if (this.orderStatusForm.valid) {\n        const requestBody = {\n          oid: this.data.oid,\n          status: this.data.status,\n          remark: this.orderStatusForm.value.remark\n        };\n        this.apiService.updateorderStatus(requestBody).subscribe(res => {\n          this.toastService.showSuccess('Status Updated successfully!');\n          this.dialogRef.close();\n        }), error => {\n          console.error('Error creating post:', error);\n          this.toastService.showError(error); // Optionally, you can handle errors, show a message, etc.\n        }; // Call your API to update order status\n        // You can use Angular HttpClient for this\n        // Close the modal when done\n      }\n    }\n\n  }\n\n  OrderStatusModalComponent.ɵfac = function OrderStatusModalComponent_Factory(t) {\n    return new (t || OrderStatusModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.ToastService));\n  };\n\n  OrderStatusModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrderStatusModalComponent,\n    selectors: [[\"app-order-status-modal\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [\"mat-dialog-content\", \"\"], [\"matInput\", \"\", \"formControlName\", \"remark\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function OrderStatusModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\")(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Remark\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"textarea\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function OrderStatusModalComponent_Template_button_click_7_listener() {\n          return ctx.updateOrderStatus();\n        });\n        i0.ɵɵtext(8, \"Update Status\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.orderStatusForm);\n      }\n    },\n    dependencies: [i1.MatDialogContent, i1.MatDialogActions, i5.MatButton, i6.MatFormField, i6.MatLabel, i7.MatInput, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    encapsulation: 2\n  });\n  return OrderStatusModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}